app: course-policy-ai
plugins:
  - serverless-offline
  - serverless-plugin-utils
org: coursepolicy
service: core

frameworkVersion: '3'
custom:
  stage: ${opt:stage, self:provider.stage}
  defaultStage: staging
  # ssm: ${ssm:/aws/reference/secretsmanager/
  #   ${opt:stage, self:provider.stage}
  #   /course-policy-ai/envs~true}

provider:
  name: aws
  runtime: nodejs18.x
  region: us-west-2
  stage: ${opt:stage, self:custom.defaultStage}
  httpApi:
    cors: true
  apiGateway:
    binaryMediaTypes:
      - 'application/pdf'
    metrics: true
  logs:
    restApi: true
  environment: ${file(./serverless/environment_variables.json):${self:custom.stage}}

functions:
  postPolicyWebhook:
    handler: dist/src/http/post-policy-webhook/index.handler
    events:
      - httpApi:
          path: /hook
          method: post
  getPolicy:
    handler: dist/src/http/get-policy/index.handler
    events:
      - httpApi:
          path: /policy
          method: get
    timeout: 30
  updatePolicy:
    handler: dist/src/http/update-policy/index.handler
    events:
      - httpApi:
          path: /policy
          method: post
  getGeneratedPdf:
    handler: dist/src/http/get-generated-pdf/index.handler
    events:
      - httpApi:
          path: /generated-pdf
          method: get
    timeout: 180
    memorySize: 2048
    layers:
      - arn:aws:lambda:us-west-2:${ternary( ${self:custom.stage}, production, 208733872559, 694509587593)}:layer:chromium:${ternary( ${self:custom.stage}, production, 1, 3)}
